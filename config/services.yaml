# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    uploads_directory: '%kernel.project_dir%/public/uploads/'
    mangadex_url: '%env(MANGADEX_URL)%'
    riot_api_key: '%env(RIOT_API_KEY)%'

    #Twitter
    consumer_key: '%env(TWITTER_CONSUMER_KEY)%'
    consumer_secret: '%env(TWITTER_CONSUMER_SECRET)%'
    oauth_token: '%env(TWITTER_ACCESS_TOKEN)%'
    oauth_token_secret: '%env(TWITTER_ACCESS_TOKEN_SECRET)%'
    twitter_enable: '%env(TWITTER_ENABLE)%'

    #Locale
    locale: 'en'
    app_locales_array: ['en', 'fr']
    app_locales: 'en|fr'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:               # defines the scalar arguments once and apply them to any service defined/created in this file
            $locales: '%app_locales%'
            $defaultLocale: '%locale%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Service\FileUploader:
        arguments:
            $targetDirectory: '%uploads_directory%'

    App\Service\FileRemover:
        arguments:
            $targetDirectory: '%uploads_directory%'

    App\EventListener\LoginListener:
        tags:
            - { name: 'kernel.event_listener', event: 'security.interactive_login' }
